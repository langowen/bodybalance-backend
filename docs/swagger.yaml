basePath: /api/v1
definitions:
  response.AccountResponse:
    properties:
      type_id:
        type: number
      type_name:
        type: string
    type: object
  response.CategoryResponse:
    properties:
      id:
        description: ID из БД
        type: number
      img_url:
        description: Превью картинка для категории
        type: string
      name:
        description: Название категории
        type: string
    type: object
  response.ErrorResponse:
    properties:
      details:
        type: string
      error:
        type: string
    type: object
  response.VideoResponse:
    properties:
      category:
        description: Название категории
        type: string
      description:
        description: Описание видео
        type: string
      id:
        description: ID из БД
        type: number
      img_url:
        description: Превью картинка для видео
        type: string
      name:
        description: Название видео
        type: string
      url:
        description: URL адрес до файла
        type: string
    type: object
host: https://api.7375.org
info:
  contact: {}
  description: API для управления видео-контентом BodyBalance.
  title: BodyBalance API
  version: "1.0"
paths:
  /img/{filename}:
    get:
      consumes:
      - application/json
      description: Send img file by filename
      parameters:
      - description: Video filename (e.g. 'shee_video.jpg')
        in: path
        name: filename
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: file
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Serve img file
      tags:
      - images
  /v1/category:
    get:
      consumes:
      - application/json
      description: Returns all categories for specified type, order by name
      parameters:
      - description: Type id (e.g. '1', '2')
        in: query
        name: type
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.CategoryResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get categories by  type
      tags:
      - Categories
  /v1/login:
    get:
      consumes:
      - application/json
      description: Checks if account with specified username exists and return type
        id, type name
      parameters:
      - description: Username to check (e.g. 'base')
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AccountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Check account existence
      tags:
      - Auth
  /v1/video:
    get:
      consumes:
      - application/json
      description: Returns video details by its ID
      parameters:
      - description: Video ID (e.g. '1')
        in: query
        name: video_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VideoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get video by ID
      tags:
      - Videos
  /v1/video_categories:
    get:
      consumes:
      - application/json
      description: Returns videos filtered by type and category, order by name
      parameters:
      - description: Type id (e.g. '1')
        in: query
        name: type
        required: true
        type: integer
      - description: Category id(e.g. '1')
        in: query
        name: category
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.VideoResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get videos by category and type
      tags:
      - Videos
  /video/{filename}:
    get:
      consumes:
      - application/json
      description: Streams video file by filename
      parameters:
      - description: Video filename (e.g. 'Sheya_baza.mp4')
        in: path
        name: filename
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: file
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Serve video file
      tags:
      - Videos
swagger: "2.0"
